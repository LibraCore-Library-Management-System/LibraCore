@model PagedUsersViewModel

<div class="container mt-5">
    <h2 class="text-center mb-4">Users List</h2>

    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead class="table-primary">
                <tr>
                    <th>Email</th>
                    <th>Roles</th>
                    <th class="text-center">Actions</th> <!-- Center actions column -->
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.Users)
                {
                    <tr>
                        <td>@user.Email</td>
                        <td>@string.Join(", ", user.Roles)</td>
                        <td class="text-center">
                            <a asp-action="EditUser" asp-route-userId="@user.UserId" class="btn btn-outline-primary btn-sm">Edit</a>
                            <button class="btn btn-outline-danger btn-sm" onclick="openDeleteModal('@user.UserId', '@user.Email')">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination controls -->
    <nav aria-label="Page navigation" class="mt-3">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="?page=@(Model.CurrentPage - 1)&pageSize=@Model.PageSize">Previous</a>
            </li>
            @for (int i = 1; i <= Math.Ceiling((double)Model.TotalUsers / Model.PageSize); i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="?page=@i&pageSize=@Model.PageSize">@i</a>
                </li>
            }
            <li class="page-item @(Model.CurrentPage == Math.Ceiling((double)Model.TotalUsers / Model.PageSize) ? "disabled" : "")">
                <a class="page-link" href="?page=@(Model.CurrentPage + 1)&pageSize=@Model.PageSize">Next</a>
            </li>
        </ul>
    </nav>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteUserModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the user <strong id="userEmail"></strong>?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let userIdToDelete;

        function openDeleteModal(userId, userEmail) {
            userIdToDelete = userId; // Store userId for deletion
            document.getElementById('userEmail').innerText = userEmail;
            var deleteModal = new bootstrap.Modal(document.getElementById('deleteUserModal'));
            deleteModal.show();
        }

        document.getElementById('confirmDelete').addEventListener('click', async () => {
            const response = await fetch(`/Account/DeleteUser?userId=${userIdToDelete}`, {
                method: 'DELETE'
            });

            if (response.ok) {
                location.reload(); // Reload the page to see changes
            } else {
                const result = await response.json();
                alert(result.Error || "Failed to delete user.");
            }
        });
    </script>
}
